// Code generated by mockery v1.0.0
package mocks

import (
	"github.com/models"
)
import mock "github.com/stretchr/testify/mock"

// Usecase is an autogenerated mock type for the Usecase type
type Usecase struct {
	mock.Mock
}

// Delete provides a mock function with given fields: ctx, id
func (_m *Usecase) ForgotPassword(email string,token string)(*models.ResponseDelete,error) {
	ret := _m.Called(email,token)

	var r0 *models.ResponseDelete
	if rf, ok := ret.Get(0).(func(string,string) *models.ResponseDelete); ok {
		r0 = rf(email,token)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ResponseDelete)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string,string) error); ok {
		r1 = rf(email,token)
	} else {
		r1 = ret.Error(1)
	}

	return r0,r1
}

// Fetch provides a mock function with given fields: ctx, cursor, num
func (_m *Usecase) CallBackGoogle(code string)(*models.GetInfoUserGoogle,error) {
	ret := _m.Called(code)

	var r0 *models.GetInfoUserGoogle
	if rf, ok := ret.Get(0).(func(string) *models.GetInfoUserGoogle); ok {
		r0 = rf(code)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.GetInfoUserGoogle)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(code)
	} else {
		r1 = ret.Error(1)
	}

	return r0,r1
}

// GetByID provides a mock function with given fields: ctx, id
func (_m *Usecase) DeleteUser(userId string)error {
	ret := _m.Called(userId)

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userId)
	} else {
		r1 = ret.Error(1)
	}

	return r1
}

// GetByTitle provides a mock function with given fields: ctx, title
func (_m *Usecase) GetListOfRole(roleType int)([]*models.RolesPermissionIs,error) {
	ret := _m.Called(roleType)

	var r0 []*models.RolesPermissionIs
	if rf, ok := ret.Get(0).(func(int) []*models.RolesPermissionIs); ok {
		r0 = rf(roleType)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.RolesPermissionIs)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(roleType)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Store provides a mock function with given fields: _a0, _a1
func (_m *Usecase) UpdateUser(ar *models.RegisterAndUpdateUser) (*models.RegisterAndUpdateUser, error) {
	ret := _m.Called(ar)

	var r0 *models.RegisterAndUpdateUser
	if rf, ok := ret.Get(0).(func(*models.RegisterAndUpdateUser) *models.RegisterAndUpdateUser); ok {
		r0 = rf(ar)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.RegisterAndUpdateUser)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*models.RegisterAndUpdateUser) error); ok {
		r1 = rf(ar)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Store provides a mock function with given fields: _a0, _a1
func (_m *Usecase) CreateUser(ar *models.RegisterAndUpdateUser) (*models.RegisterAndUpdateUser, error) {
	ret := _m.Called(ar)

	var r0 *models.RegisterAndUpdateUser
	if rf, ok := ret.Get(0).(func(*models.RegisterAndUpdateUser) *models.RegisterAndUpdateUser); ok {
		r0 = rf(ar)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.RegisterAndUpdateUser)
		}
	}


	var r1 error
	if rf, ok := ret.Get(1).(func(*models.RegisterAndUpdateUser) error); ok {
		r1 = rf(ar)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: ctx, id
func (_m *Usecase) SendingEmail(r *models.SendingEmail) (*models.SendingEmail, error) {
	ret := _m.Called(r)

	var r0 *models.SendingEmail
	if rf, ok := ret.Get(0).(func(*models.SendingEmail) *models.SendingEmail); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.SendingEmail)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*models.SendingEmail) error); ok {
		r1 = rf(r)
	} else {
		r1 = ret.Error(1)
	}

	return r0,r1
}

// Fetch provides a mock function with given fields: ctx, cursor, num
func (_m *Usecase) VerifiedEmail(r *models.VerifiedEmail) (*models.VerifiedEmail, error) {
	ret := _m.Called(r)

	var r0 *models.VerifiedEmail
	if rf, ok := ret.Get(0).(func(*models.VerifiedEmail) *models.VerifiedEmail); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.VerifiedEmail)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*models.VerifiedEmail) error); ok {
		r1 = rf(r)
	} else {
		r1 = ret.Error(1)
	}

	return r0,r1
}

// GetByID provides a mock function with given fields: ctx, id
func (_m *Usecase) GetUserInfo(token string) (*models.GetUserInfo, error) {
	ret := _m.Called(token)

	var r0 *models.GetUserInfo
	if rf, ok := ret.Get(0).(func(string) *models.GetUserInfo); ok {
		r0 = rf(token)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.GetUserInfo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(token)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByTitle provides a mock function with given fields: ctx, title
func (_m *Usecase) GetToken(username string, password string,scope string) (*models.GetToken, error) {
	ret := _m.Called(username,password,scope)

	var r0 *models.GetToken
	if rf, ok := ret.Get(0).(func(string,string,string) *models.GetToken); ok {
		r0 = rf(username,password,scope)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.GetToken)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string,string,string) error); ok {
		r1 = rf(username,password,scope)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Store provides a mock function with given fields: _a0, _a1
func (_m *Usecase) RefreshToken(refreshToken string) (*models.RefreshToken, error) {
	ret := _m.Called(refreshToken)

	var r0 *models.RefreshToken
	if rf, ok := ret.Get(0).(func(string) *models.RefreshToken); ok {
		r0 = rf(refreshToken)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.RefreshToken)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(refreshToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Store provides a mock function with given fields: _a0, _a1
func (_m *Usecase) UploadFileToBlob(image string, folder string) (string, error) {
	ret := _m.Called(image,folder)

	var r0 string
	if rf, ok := ret.Get(0).(func(string,string) string); ok {
		r0 = rf(image,folder)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(string)
		}
	}


	var r1 error
	if rf, ok := ret.Get(1).(func(string,string) error); ok {
		r1 = rf(image,folder)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Fetch provides a mock function with given fields: ctx, cursor, num
func (_m *Usecase) UploadFilePDFToBlob(bit []byte,folder string) (string, error) {
	ret := _m.Called(bit,folder)

	var r0 string
	if rf, ok := ret.Get(0).(func([]byte,string) string); ok {
		r0 = rf(bit,folder)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]byte,string) error); ok {
		r1 = rf(bit,folder)
	} else {
		r1 = ret.Error(1)
	}

	return r0,r1
}

// GetByID provides a mock function with given fields: ctx, id
func (_m *Usecase) RequestOTP(phoneNumber string)(*models.RequestOTP,error) {
	ret := _m.Called(phoneNumber)

	var r0 *models.RequestOTP
	if rf, ok := ret.Get(0).(func(string) *models.RequestOTP); ok {
		r0 = rf(phoneNumber)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.RequestOTP)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(phoneNumber)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByTitle provides a mock function with given fields: ctx, title
func (_m *Usecase) RequestOTPTmp(phoneNumber string,email string)(*models.RequestOTP,error) {
	ret := _m.Called(phoneNumber,email)

	var r0 *models.RequestOTP
	if rf, ok := ret.Get(0).(func(string,string) *models.RequestOTP); ok {
		r0 = rf(phoneNumber,email)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.RequestOTP)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string,string) error); ok {
		r1 = rf(phoneNumber,email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Store provides a mock function with given fields: _a0, _a1
func (_m *Usecase) SendingSMS(sms *models.SendingSMS)(*models.SendingSMS,error) {
	ret := _m.Called(sms)

	var r0 *models.SendingSMS
	if rf, ok := ret.Get(0).(func(*models.SendingSMS) *models.SendingSMS); ok {
		r0 = rf(sms)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.SendingSMS)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*models.SendingSMS) error); ok {
		r1 = rf(sms)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Store provides a mock function with given fields: _a0, _a1
func (_m *Usecase) GetDetailUserById(id string,token string,isDetail string)(*models.GetUserDetail,error) {
	ret := _m.Called(id,token,isDetail)

	var r0 *models.GetUserDetail
	if rf, ok := ret.Get(0).(func(string,string,string) *models.GetUserDetail); ok {
		r0 = rf(id,token,isDetail)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.GetUserDetail)
		}
	}


	var r1 error
	if rf, ok := ret.Get(1).(func(string,string,string) error); ok {
		r1 = rf(id,token,isDetail)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

