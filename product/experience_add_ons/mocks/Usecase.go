// Code generated by mockery v1.0.0
package mocks

import (
	context "context"
	"github.com/models"
)
import mock "github.com/stretchr/testify/mock"

// Usecase is an autogenerated mock type for the Usecase type
type Usecase struct {
	mock.Mock
}

// Fetch provides a mock function with given fields: ctx, cursor, num
func (_m *Usecase) GetByExpId(ctx context.Context, exp_id string,currency string) ([]*models.ExperienceAddOnDto, error) {
	ret := _m.Called(ctx, exp_id,currency)

	var r0 []*models.ExperienceAddOnDto
	if rf, ok := ret.Get(0).(func(context.Context,string,string) []*models.ExperienceAddOnDto); ok {
		r0 = rf(ctx,exp_id,currency)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.ExperienceAddOnDto)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string,string) error); ok {
		r1 = rf(ctx, exp_id,currency)
	} else {
		r1 = ret.Error(1)
	}

	return r0,r1
}
